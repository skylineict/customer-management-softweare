"""
Django settings for customer project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import os
from django.contrib import messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dz0kuj=*!t(%8w40037tm0xa52n%&%75sp&wa=9n)f4v4sf+ib'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "dashapp",
    'customerapp',
    # 'membersauth',
    'contactus',
    "userssetting",
    'bulkemail',
    'multi_email_field',
    "newsletter",
    'membersauth',
    'incomeapp',
    'credentail',
    'chart',
    'incomesummary',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'customer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'customer.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': "customerapp",
#         "USER": "postgres",
#         "PASSWORD": "monoskey",
#         "HOST":    "localhost",
#     }
# }

DATABASES = {
    'default': {
        'ENGINE':  'django.db.backends.mysql',
        'NAME': config('DB_NAME'),
        "USER": config('DB_USER', default=''),
        "PASSWORD": config('DB_USER_PASSWORD', default=""),
        "HOST":    config('DB_HOST', default="localhost")
    }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': 'mydatabase',
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'customer',
#         'USER': 'customer',
#         'PASSWORD': 'monoskey',
#         'HOST': 'localhost',
#         'PORT': '',
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# EMAIL_HOST = config('EMAIL_HOST', default='localhost')
# EMAIL_HOST_USER = config('EMAIL_HOST_USER', default='')
# EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD', default='')
# EMAIL_PORT = config('EMAIL_PORT', default=587, cast=int)
# # EMAIL_USE_SSL = True
# EMAIL_USE_TLS = True
# ADMINS = [
#     ('olisa maculay', 'skylineict@gmail.com'),
# ]
#EMAIL_USE_TLS = True


EMAIL_HOST = 'mail.spotras.com'
EMAIL_HOST_USER = 'testing@spotras.com'
EMAIL_HOST_PASSWORD = 'Monoskey@93'
EMAIL_PORT =  465
EMAIL_USE_SSL = True
# EMAIL_USE_TLS = True
ADMINS = [
    ('olisa maculay', 'testing@spotras.com'),
]
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# EMAIL_HOST=mail.diamondcastle1.cash
# EMAIL_HOST_USER=info@diamondcastle1.cash
# EMAIL_HOST_PASSWORD=monoskey@93
# EMAIL_PORT=587


STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]


ACCOUNT_EMAIL_VERIFICATION = "none"

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-info',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger',
}

LOGOUT_REDIRECT_URL = "login"
